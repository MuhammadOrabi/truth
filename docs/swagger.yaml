definitions:
  database.Source:
    properties:
      active:
        type: boolean
      name:
        type: string
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      url:
        type: string
    required:
    - active
    - name
    - status
    - tags
    - url
    type: object
  database.User:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  handlers.AuthResponse:
    properties:
      token:
        type: string
    type: object
  handlers.LoginBody:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.searchBody:
    properties:
      keyword:
        type: string
      type:
        type: string
    type: object
info:
  contact:
    email: muhammad@orabi.me
    name: API Support
    url: https://truth.orabi.me/support
  description: This is a Truth Finder server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Truth Finder
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: LoginBody
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthResponse'
      summary: Login
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/database.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthResponse'
      summary: Register
      tags:
      - Auth
  /search:
    post:
      consumes:
      - application/json
      parameters:
      - description: search params
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/handlers.searchBody'
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - ApiKeyAuth: []
      summary: Search
      tags:
      - Search
  /sources:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Source'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List sources
      tags:
      - Sources
    post:
      consumes:
      - application/json
      parameters:
      - description: Source
        in: body
        name: source
        required: true
        schema:
          $ref: '#/definitions/database.Source'
      produces:
      - application/json
      responses:
        "201": {}
      security:
      - ApiKeyAuth: []
      summary: Create source
      tags:
      - Sources
  /sources/{id}:
    delete:
      parameters:
      - description: Source ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200": {}
      security:
      - ApiKeyAuth: []
      summary: Delete source
      tags:
      - Sources
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
